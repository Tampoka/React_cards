[{"D:\\cards-proj\\src\\api\\auth-api.ts":"1","D:\\cards-proj\\src\\api\\cards-api.ts":"2","D:\\cards-proj\\src\\api\\packs-api.ts":"3","D:\\cards-proj\\src\\app\\App.tsx":"4","D:\\cards-proj\\src\\app\\AppRoutes.tsx":"5","D:\\cards-proj\\src\\App.test.tsx":"6","D:\\cards-proj\\src\\common\\components\\BgLoader\\BgLoader.tsx":"7","D:\\cards-proj\\src\\common\\components\\Header\\Header.tsx":"8","D:\\cards-proj\\src\\common\\components\\InfoAlert\\Alert.tsx":"9","D:\\cards-proj\\src\\common\\components\\InfoAlert\\AlertMessage.tsx":"10","D:\\cards-proj\\src\\common\\components\\Loader\\Loader.tsx":"11","D:\\cards-proj\\src\\common\\components\\Main\\Main.tsx":"12","D:\\cards-proj\\src\\common\\components\\Modal\\Modal.tsx":"13","D:\\cards-proj\\src\\common\\components\\PacksPagination\\PacksPagination.tsx":"14","D:\\cards-proj\\src\\common\\components\\Pagination\\Pagination.tsx":"15","D:\\cards-proj\\src\\common\\components\\Search\\Search.tsx":"16","D:\\cards-proj\\src\\common\\components\\Spinner\\Spinner.tsx":"17","D:\\cards-proj\\src\\common\\components\\SuperButton\\SuperButton.tsx":"18","D:\\cards-proj\\src\\common\\components\\SuperCheckbox\\SuperCheckbox.tsx":"19","D:\\cards-proj\\src\\common\\components\\SuperEditableSpan\\SuperEditableSpan.tsx":"20","D:\\cards-proj\\src\\common\\components\\SuperInputText\\SuperInputText.tsx":"21","D:\\cards-proj\\src\\common\\components\\SuperRadio\\SuperRadio.tsx":"22","D:\\cards-proj\\src\\common\\components\\SuperSelect\\SuperSelect.tsx":"23","D:\\cards-proj\\src\\common\\hooks\\useDebounce.ts":"24","D:\\cards-proj\\src\\common\\hooks\\useModal.ts":"25","D:\\cards-proj\\src\\index.tsx":"26","D:\\cards-proj\\src\\pages\\Cards\\Cards.tsx":"27","D:\\cards-proj\\src\\pages\\Decks\\AddDeckForm\\AddDeckForm.tsx":"28","D:\\cards-proj\\src\\pages\\Decks\\BtnBlock\\BtnBlock.tsx":"29","D:\\cards-proj\\src\\pages\\Decks\\Decks.tsx":"30","D:\\cards-proj\\src\\pages\\Decks\\DecksTable\\DecksTable.tsx":"31","D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckForm\\UpdateDeckForm.tsx":"32","D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckModal\\UpdateDeckModal.tsx":"33","D:\\cards-proj\\src\\pages\\Error404\\Error404.tsx":"34","D:\\cards-proj\\src\\pages\\Login\\Login.tsx":"35","D:\\cards-proj\\src\\pages\\Login\\LoginForm.tsx":"36","D:\\cards-proj\\src\\pages\\NewPassword\\NewPassword.tsx":"37","D:\\cards-proj\\src\\pages\\Profile\\Profile.tsx":"38","D:\\cards-proj\\src\\pages\\RestorePassword\\RestorePassword.tsx":"39","D:\\cards-proj\\src\\pages\\SignUp\\SignUp2.tsx":"40","D:\\cards-proj\\src\\pages\\SignUp\\SignUpForm2.tsx":"41","D:\\cards-proj\\src\\pages\\Test\\TestingComponents.tsx":"42","D:\\cards-proj\\src\\react-app-env.d.ts":"43","D:\\cards-proj\\src\\redux\\app-reducer.ts":"44","D:\\cards-proj\\src\\redux\\auth-reducer.ts":"45","D:\\cards-proj\\src\\redux\\decks-reducer.ts":"46","D:\\cards-proj\\src\\redux\\newPassword-reducer.ts":"47","D:\\cards-proj\\src\\redux\\profile-reducer.ts":"48","D:\\cards-proj\\src\\redux\\restorePassword-reducer.ts":"49","D:\\cards-proj\\src\\redux\\signUp-reducer.ts":"50","D:\\cards-proj\\src\\redux\\store.ts":"51","D:\\cards-proj\\src\\reportWebVitals.ts":"52","D:\\cards-proj\\src\\setupTests.ts":"53"},{"size":1345,"mtime":1642235158686,"results":"54","hashOfConfig":"55"},{"size":2215,"mtime":1642235417936,"results":"56","hashOfConfig":"55"},{"size":1694,"mtime":1642297627475,"results":"57","hashOfConfig":"55"},{"size":955,"mtime":1642641664424,"results":"58","hashOfConfig":"55"},{"size":1617,"mtime":1642497554401,"results":"59","hashOfConfig":"55"},{"size":277,"mtime":1640826227500,"results":"60","hashOfConfig":"55"},{"size":249,"mtime":1642173577867,"results":"61","hashOfConfig":"55"},{"size":1428,"mtime":1642233324372,"results":"62","hashOfConfig":"55"},{"size":662,"mtime":1642499146444,"results":"63","hashOfConfig":"55"},{"size":937,"mtime":1642497311280,"results":"64","hashOfConfig":"55"},{"size":230,"mtime":1641887256202,"results":"65","hashOfConfig":"55"},{"size":298,"mtime":1642290146876,"results":"66","hashOfConfig":"55"},{"size":648,"mtime":1642581904897,"results":"67","hashOfConfig":"55"},{"size":1449,"mtime":1642641726582,"results":"68","hashOfConfig":"55"},{"size":2589,"mtime":1642641777468,"results":"69","hashOfConfig":"55"},{"size":1267,"mtime":1642641826924,"results":"70","hashOfConfig":"55"},{"size":239,"mtime":1641887998337,"results":"71","hashOfConfig":"55"},{"size":692,"mtime":1641869890107,"results":"72","hashOfConfig":"55"},{"size":1239,"mtime":1642142903980,"results":"73","hashOfConfig":"55"},{"size":3781,"mtime":1642336570399,"results":"74","hashOfConfig":"55"},{"size":1790,"mtime":1642590829084,"results":"75","hashOfConfig":"55"},{"size":1452,"mtime":1642047843482,"results":"76","hashOfConfig":"55"},{"size":1549,"mtime":1642251557617,"results":"77","hashOfConfig":"55"},{"size":413,"mtime":1642468809185,"results":"78","hashOfConfig":"55"},{"size":389,"mtime":1642602048609,"results":"79","hashOfConfig":"55"},{"size":744,"mtime":1640828808954,"results":"80","hashOfConfig":"55"},{"size":209,"mtime":1642581618540,"results":"81","hashOfConfig":"55"},{"size":1555,"mtime":1642590242533,"results":"82","hashOfConfig":"55"},{"size":850,"mtime":1642562127627,"results":"83","hashOfConfig":"55"},{"size":3592,"mtime":1642638976416,"results":"84","hashOfConfig":"55"},{"size":2913,"mtime":1642638835601,"results":"85","hashOfConfig":"55"},{"size":1724,"mtime":1642634711199,"results":"86","hashOfConfig":"55"},{"size":949,"mtime":1642638564735,"results":"87","hashOfConfig":"55"},{"size":177,"mtime":1641825198863,"results":"88","hashOfConfig":"55"},{"size":793,"mtime":1642495048724,"results":"89","hashOfConfig":"55"},{"size":4221,"mtime":1642495048729,"results":"90","hashOfConfig":"55"},{"size":171,"mtime":1640759133552,"results":"91","hashOfConfig":"55"},{"size":1001,"mtime":1642495092681,"results":"92","hashOfConfig":"55"},{"size":183,"mtime":1640759133548,"results":"93","hashOfConfig":"55"},{"size":2709,"mtime":1642495249271,"results":"94","hashOfConfig":"55"},{"size":4376,"mtime":1642234560437,"results":"95","hashOfConfig":"55"},{"size":1033,"mtime":1642335250275,"results":"96","hashOfConfig":"55"},{"size":41,"mtime":1640740492319,"results":"97","hashOfConfig":"55"},{"size":2483,"mtime":1642498587941,"results":"98","hashOfConfig":"55"},{"size":2022,"mtime":1642498538778,"results":"99","hashOfConfig":"55"},{"size":6678,"mtime":1642498587935,"results":"100","hashOfConfig":"55"},{"size":773,"mtime":1642052761661,"results":"101","hashOfConfig":"55"},{"size":2164,"mtime":1642221753276,"results":"102","hashOfConfig":"55"},{"size":748,"mtime":1641823117796,"results":"103","hashOfConfig":"55"},{"size":1515,"mtime":1642234560397,"results":"104","hashOfConfig":"55"},{"size":1634,"mtime":1642246933223,"results":"105","hashOfConfig":"55"},{"size":425,"mtime":1640740466209,"results":"106","hashOfConfig":"55"},{"size":241,"mtime":1640740466209,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdw27y",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":7,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":12,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cards-proj\\src\\api\\auth-api.ts",[],"D:\\cards-proj\\src\\api\\cards-api.ts",["237"],"import axios, {AxiosResponse} from \"axios\";\r\nimport {instance} from \"./auth-api\";\r\n\r\nexport const cardsAPI = {\r\n    getCards: (payload?: GetCardsQueryParams) => instance\r\n        .get<CardsResponse>('/cards/card', {params: payload}),\r\n\r\n    createCard: (payload?: NewCardData) => instance\r\n        .post<NewCardData, AxiosResponse<CardType>>('/cards/card', payload),\r\n\r\n    deleteCard: (payload: DeleteCardData) => instance\r\n        .delete<CardType>(`/cards/card`, {params: payload}),\r\n\r\n    updateCard: (payload: UpdateCardData) => instance\r\n        .put<UpdateCardData, AxiosResponse<CardType>>('/cards/card', payload),\r\n\r\n    grade: (payload: GradeData) => instance\r\n        .put<GradeData, AxiosResponse<GradeResponse>>('/cards/grade', payload)\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponse = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport type GetCardsQueryParams = {\r\n    cardsPack_id?: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type NewCardData = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\n\r\nexport type UpdateCardData = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        answer?: string\r\n    }\r\n}\r\n\r\nexport type DeleteCardData = {\r\n    id: string\r\n}\r\n\r\nexport type GradeData = {\r\n    card_id: string\r\n    grade: number\r\n}\r\n\r\nexport type GradeResponse = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\n\r\n","D:\\cards-proj\\src\\api\\packs-api.ts",[],"D:\\cards-proj\\src\\app\\App.tsx",["238","239"],"D:\\cards-proj\\src\\app\\AppRoutes.tsx",[],"D:\\cards-proj\\src\\App.test.tsx",[],"D:\\cards-proj\\src\\common\\components\\BgLoader\\BgLoader.tsx",[],"D:\\cards-proj\\src\\common\\components\\Header\\Header.tsx",[],"D:\\cards-proj\\src\\common\\components\\InfoAlert\\Alert.tsx",[],"D:\\cards-proj\\src\\common\\components\\InfoAlert\\AlertMessage.tsx",["240"],"import {useCallback, useEffect, useState} from \"react\";\r\nimport s from './AlertMessage.module.scss'\r\n\r\ntype PropsType = {\r\n    error:boolean\r\n    text: string | null\r\n    onClose: () => void\r\n}\r\n\r\nexport const AlertMessage = ({text,onClose,error}:PropsType) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(error||!!text)\r\n\r\n    const closeAlert = useCallback(() => {\r\n        setIsOpen(false)\r\n        onClose()\r\n    }, [onClose,isOpen])\r\n\r\n    useEffect(() => {\r\n        setIsOpen(error||!!text)\r\n        const timeoutID = setTimeout(() => {\r\n            closeAlert()\r\n        }, 5000)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    }, [closeAlert,setIsOpen,error,text])\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n            <div className={`${s.container} ${error && s.error}`}>\r\n                <div>{text}</div>\r\n                <span onClick={closeAlert}>X</span>\r\n            </div>}\r\n        </>\r\n    )\r\n}","D:\\cards-proj\\src\\common\\components\\Loader\\Loader.tsx",[],"D:\\cards-proj\\src\\common\\components\\Main\\Main.tsx",[],"D:\\cards-proj\\src\\common\\components\\Modal\\Modal.tsx",[],"D:\\cards-proj\\src\\common\\components\\PacksPagination\\PacksPagination.tsx",["241"],"D:\\cards-proj\\src\\common\\components\\Pagination\\Pagination.tsx",["242","243","244","245","246","247","248","249","250","251"],"D:\\cards-proj\\src\\common\\components\\Search\\Search.tsx",[],"D:\\cards-proj\\src\\common\\components\\Spinner\\Spinner.tsx",[],"D:\\cards-proj\\src\\common\\components\\SuperButton\\SuperButton.tsx",["252"],"import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,type,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n            type={type}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","D:\\cards-proj\\src\\common\\components\\SuperCheckbox\\SuperCheckbox.tsx",["253","254"],"import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.labelContainer}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","D:\\cards-proj\\src\\common\\components\\SuperEditableSpan\\SuperEditableSpan.tsx",["255","256"],"import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onBlurHandler?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    defaultValue:string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        spanClassName,\r\n        onBlurHandler,\r\n        defaultValue,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [text, setText] = useState<string>(defaultValue)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n        onBlur && onBlur(e)\r\n        onBlurHandler && onBlurHandler(e.currentTarget.value)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const setSpanClassName = `${s.editableSpan} ${spanClassName} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onChangeText={setText}\r\n                        value={text}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={setSpanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || text}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","D:\\cards-proj\\src\\common\\components\\SuperInputText\\SuperInputText.tsx",["257","258"],"import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    defaultValue?:string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n            defaultValue,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [text,setText]=useState(defaultValue)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        defaultValue&&setText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput}  ${className}`\r\n\r\n    return (\r\n        <div className={s.inputContainer}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","D:\\cards-proj\\src\\common\\components\\SuperRadio\\SuperRadio.tsx",["259","260","261","262"],"import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: JSX.Element[] = options\r\n        ? options.map((o, i) => (\r\n            <label key={name + '-' + i}>\r\n                <input\r\n                    type={'radio'}\r\n                    name={name}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    checked={o === value}\r\n                    className={o === value ? s.radioSelected : s.radio}\r\n                    {...restProps}\r\n                    // name, checked, value, onChange\r\n                />\r\n                {o}\r\n            </label>\r\n        ))\r\n        : []\r\n    return (\r\n        <div className={s.radioContainer}>\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","D:\\cards-proj\\src\\common\\components\\SuperSelect\\SuperSelect.tsx",["263","264","265"],"import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[] | number[]\r\n    onChangeOption?: (option: any) => void\r\n    label?: string\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        className,\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => {\r\n        return (\r\n            <option\r\n                className={s.option}\r\n                key={o + ' ' + i}\r\n                value={o}\r\n            >\r\n                {o}\r\n            </option>)\r\n    }) : []// map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const finalSelectClassName = s.select + (className ? ' ' + className : '')\r\n\r\n    return (\r\n        <div className={s.selectContainer}>\r\n            {label && <label className={s.selectLabel}>{label}</label>}\r\n            <select onChange={onChangeCallback}\r\n                    {...restProps}\r\n                    className={finalSelectClassName}\r\n            >\r\n                {mappedOptions}\r\n            </select></div>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","D:\\cards-proj\\src\\common\\hooks\\useDebounce.ts",[],"D:\\cards-proj\\src\\common\\hooks\\useModal.ts",["266"],"import {useState} from \"react\";\r\n\r\nexport const useModal = (openInit: boolean = false) => {\r\n    const [isOpen, setIsOpen] = useState(openInit)\r\n\r\n    const onOpen = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const onToggle = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return {onOpen, onClose, isOpen, onToggle}\r\n}","D:\\cards-proj\\src\\index.tsx",[],"D:\\cards-proj\\src\\pages\\Cards\\Cards.tsx",["267"],"import {useDispatch} from \"react-redux\";\r\n\r\nconst Cards = () => {\r\n    const dispatch=useDispatch()\r\n    return (\r\n        <div>\r\n            <h1>Cards</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;","D:\\cards-proj\\src\\pages\\Decks\\AddDeckForm\\AddDeckForm.tsx",["268"],"import SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useFormik} from \"formik\";\r\nimport s from './AddDeckForm.module.scss'\r\nimport * as Yup from 'yup';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    onSubmitHandler: (title:string)=>void\r\n    isLoading:boolean\r\n}\r\nexport const AddDeckForm = ({onSubmitHandler,isLoading}: PropsType) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .min(2, 'Too Short!')\r\n                .max(25, 'Too Long!')\r\n                .required('Required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            onSubmitHandler(values.name)\r\n            formik.resetForm();\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <SuperInputText  {...formik.getFieldProps('name')}\r\n                                     error={formik.touched.name && formik.errors.name\r\n                                         ? formik.errors.name\r\n                                         : ''}\r\n                    autoComplete='new-title'/>\r\n                </label>\r\n                <SuperButton type='submit' className={s.submitBtn} disabled={isLoading}>Add new deck</SuperButton>\r\n            </form>\r\n        </>\r\n    )\r\n};","D:\\cards-proj\\src\\pages\\Decks\\BtnBlock\\BtnBlock.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\Decks.tsx",["269","270","271"],"import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppSelector} from \"../../redux/store\";\r\nimport {\r\n    deleteDeck,\r\n    fetchCardsPacks,\r\n    PacksInitialState,\r\n    postDeck,\r\n    setPrivateDecks,\r\n    updateDeck\r\n} from \"../../redux/decks-reducer\";\r\nimport {PacksPagination} from \"../../common/components/PacksPagination/PacksPagination\";\r\nimport s from './Decks.module.scss'\r\nimport {DecksTable} from \"./DecksTable/DecksTable\";\r\nimport Spinner from \"../../common/components/Spinner/Spinner\";\r\nimport {BtnBlock} from \"./BtnBlock/BtnBlock\";\r\nimport {Search} from \"../../common/components/Search/Search\";\r\nimport {Modal} from \"../../common/components/Modal/Modal\";\r\nimport {AddDeckForm} from './AddDeckForm/AddDeckForm';\r\nimport {useModal} from \"../../common/hooks/useModal\";\r\n\r\nexport const Decks = React.memo(() => {\r\n    // const [modalAddDeck, setModalAddDeck] = useState<boolean>(false)\r\n    const {isOpen, onToggle} = useModal()\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.auth.isLoggedIn)\r\n    const isLoading = useAppSelector<boolean>(state => state.app.isLoading)\r\n    const userId = useAppSelector<string>(state => state.profile.profile._id)\r\n\r\n    const {\r\n        cardPacks,\r\n        cardPacksTotalCount,\r\n        minCardsCount,\r\n        maxCardsCount,\r\n        page,\r\n        pageCount,\r\n        privatePacks,\r\n        sortBy,\r\n        currentCardsCount,\r\n        countPerPage\r\n    } = useAppSelector<PacksInitialState>(state => state.decks)\r\n\r\n    const paginationScrollTopRef = useRef<HTMLHeadingElement>(null)\r\n\r\n    const deleteDeckHandler = useCallback((id: string) => {\r\n        dispatch(deleteDeck({id}));\r\n    }, [dispatch]);\r\n\r\n    const updateDeckHandler = useCallback((id: string, title: string) => {\r\n        dispatch(updateDeck({cardsPack: {_id: id, name: title}}));\r\n    }, [dispatch]);\r\n\r\n    const showPrivate = useCallback((value: boolean) => {\r\n        dispatch(setPrivateDecks(value))\r\n    }, [dispatch])\r\n\r\n    const addNewDeckHandler = useCallback((title: string) => {\r\n        dispatch(postDeck({cardsPack: {name: title}}))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        // if (cardPacks.length === 0) {\r\n        dispatch(fetchCardsPacks())\r\n        // }\r\n\r\n    }, [dispatch, page, pageCount, currentCardsCount, privatePacks, sortBy, isLoggedIn])\r\n\r\n    useEffect(() => {\r\n        paginationScrollTopRef.current?.scrollIntoView({behavior: 'smooth'})\r\n    }, [page, pageCount])\r\n\r\n    if (!isLoggedIn) return <Navigate to='/login'/>\r\n    return (\r\n        <div className={s.decksContainer}>\r\n            <h1 ref={paginationScrollTopRef}>Decks</h1>\r\n            {/*<h1 >Decks</h1>*/}\r\n            {isLoading && <Spinner/>}\r\n            <BtnBlock showPrivate={showPrivate} active={privatePacks} setModal={onToggle}/>\r\n            <Modal visible={isOpen} setVisible={onToggle}>\r\n                <AddDeckForm onSubmitHandler={addNewDeckHandler} isLoading={isLoading}/>\r\n            </Modal>\r\n            <Search/>\r\n            <DecksTable decks={cardPacks}\r\n                        deleteDeckHandler={deleteDeckHandler}\r\n                        updateDeckHandler={updateDeckHandler}\r\n                        userId={userId}/>\r\n            <PacksPagination totalCount={cardPacksTotalCount}\r\n                             pageCount={pageCount}\r\n                             currentPage={page}\r\n                             countPerPage={countPerPage}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","D:\\cards-proj\\src\\pages\\Decks\\DecksTable\\DecksTable.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckForm\\UpdateDeckForm.tsx",["272"],"import SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useFormik} from \"formik\";\r\nimport s from '../AddDeckForm/AddDeckForm.module.scss';\r\nimport * as Yup from 'yup';\r\nimport {useDispatch} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    onSubmitHandler: (title: string) => void\r\n    isLoading: boolean\r\n    title: string\r\n}\r\nexport const UpdateDeckForm = React.memo(({onSubmitHandler, isLoading, title}: PropsType) => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: title,\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .min(2, 'Too Short!')\r\n                .max(25, 'Too Long!')\r\n                .required('Required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            onSubmitHandler(values.name)\r\n        },\r\n    });\r\n    console.log(formik.values)\r\n    return (\r\n        <>\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <SuperInputText  {...formik.getFieldProps('name')}\r\n                                     error={formik.touched.name && formik.errors.name\r\n                                         ? formik.errors.name\r\n                                         : ''}\r\n                                     autoComplete='new-title'\r\n                    />\r\n                </label>\r\n                <SuperButton type='submit' className={s.submitBtn} disabled={isLoading}>Change deck title</SuperButton>\r\n            </form>\r\n        </>\r\n    )\r\n})","D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckModal\\UpdateDeckModal.tsx",["273"],"import React from 'react';\r\nimport {Modal} from \"../../../common/components/Modal/Modal\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useModal} from \"../../../common/hooks/useModal\";\r\nimport {UpdateDeckForm} from \"../UpdateDeckForm/UpdateDeckForm\";\r\n\r\ntype PropsType = {\r\n    deckName: string\r\n    isLoading: boolean\r\n    onSubmitHandler: (title: string) => void\r\n}\r\nexport const UpdateDeckModal = ({deckName, isLoading, onSubmitHandler}: PropsType) => {\r\n    const {isOpen, onToggle} = useModal()\r\n\r\n    return (\r\n        <>\r\n            <SuperButton disabled={isLoading}\r\n                         onClick={() => onToggle()}>Edit</SuperButton>\r\n            <Modal visible={isOpen} setVisible={onToggle}>\r\n                <UpdateDeckForm onSubmitHandler={onSubmitHandler} isLoading={isLoading} title={deckName}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\n","D:\\cards-proj\\src\\pages\\Error404\\Error404.tsx",[],"D:\\cards-proj\\src\\pages\\Login\\Login.tsx",["274"],"import {useState} from 'react';\r\nimport {useAppSelector} from \"../../redux/store\";\r\nimport {LoginForm} from \"./LoginForm\";\r\n\r\nexport const Login = () => {\r\n        const [showPassword, setShowPassword] = useState(false)\r\n\r\n        const error = useAppSelector<boolean>(state => state.app.error);\r\n        const info = useAppSelector<string>(state => state.app.appInfo);\r\n        const isLoading = useAppSelector<boolean>(state => state.app.isLoading);\r\n\r\n        const toggleShowPassword = () => {\r\n            setShowPassword(!showPassword)\r\n        }\r\n\r\n        return <LoginForm isLoading={isLoading}\r\n                          errorMsg={info}\r\n                          showPassword={showPassword}\r\n                          toggleShowPassword={toggleShowPassword}\r\n        />;\r\n    }\r\n;\r\n","D:\\cards-proj\\src\\pages\\Login\\LoginForm.tsx",[],"D:\\cards-proj\\src\\pages\\NewPassword\\NewPassword.tsx",[],"D:\\cards-proj\\src\\pages\\Profile\\Profile.tsx",["275","276","277"],"import React from 'react';\r\nimport {useAppSelector} from \"../../redux/store\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst Profile = React.memo(() => {\r\n        const profile = useAppSelector<ProfileType>(state => state.profile.profile)\r\n        const isLoggedIn = useAppSelector<boolean>(state => state.auth.isLoggedIn)\r\n        const error = useAppSelector<boolean>(state => state.app.error)\r\n        const navigate = useNavigate()\r\n        const dispatch = useDispatch()\r\n\r\n        if (!isLoggedIn) {\r\n            return <Navigate to={'/login'}/>;\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Welcome back, {profile.name}</h1>\r\n                <div>\r\n                    <img src={profile.avatar} alt=\"avatar\"/>\r\n                    <p>Email: {profile.email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\nexport default Profile;","D:\\cards-proj\\src\\pages\\RestorePassword\\RestorePassword.tsx",[],"D:\\cards-proj\\src\\pages\\SignUp\\SignUp2.tsx",["278","279","280"],"import {FormEvent, useCallback, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {SignUpData} from \"../../api/auth-api\";\r\nimport {useAppSelector} from \"../../redux/store\";\r\nimport {setAppError, setAppInfo} from \"../../redux/app-reducer\";\r\nimport {SignUpForm2} from \"./SignUpForm2\";\r\nimport {signUp} from \"../../redux/signUp-reducer\";\r\n\r\nexport const SignUp2 = () => {\r\n        const [values, setValues] = useState<SignUpData>({email: '', password: '', confirmPassword: ''});\r\n        const [showPassword, setShowPassword] = useState(false)\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        const error = useAppSelector<boolean>(state => state.app.error);\r\n        const info = useAppSelector<string>(state => state.app.appInfo);\r\n        const isLoading = useAppSelector<boolean>(state => state.app.isLoading);\r\n        const signUpSuccess = useAppSelector<boolean>(state => state.signUp.signUpSuccess);\r\n\r\n        const toggleShowPassword = () => {\r\n            setShowPassword(!showPassword)\r\n        }\r\n\r\n        const validate = () => {\r\n            const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n            if (values.email === '' || values.password === '') {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please fill out all required fields and try again'))\r\n            } else if (!regex.test(values.email)) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please enter valid email address.'))\r\n            } else if (values.password.trim().length <= 7) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Password must be more than 7 characters.'))\r\n            } else if (values.password !== values.confirmPassword) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please make sure your passwords match'))\r\n            } else return 1\r\n        }\r\n\r\n        const onSubmitHandler = (e: FormEvent) => {\r\n            e.preventDefault();\r\n            if (validate() === 1) {\r\n                dispatch(signUp(values));\r\n                setValues({email: '', password: '', confirmPassword: ''});\r\n            }\r\n        }\r\n\r\n        return <SignUpForm2 isLoading={isLoading}\r\n                            errorMsg={info}\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            onSubmitHandler={onSubmitHandler}\r\n                            registrationSuccess={signUpSuccess}\r\n                            showPassword={showPassword}\r\n                            toggleShowPassword={toggleShowPassword}\r\n        />;\r\n    }\r\n;\r\n","D:\\cards-proj\\src\\pages\\SignUp\\SignUpForm2.tsx",[],"D:\\cards-proj\\src\\pages\\Test\\TestingComponents.tsx",[],"D:\\cards-proj\\src\\react-app-env.d.ts",[],"D:\\cards-proj\\src\\redux\\app-reducer.ts",["281","282"],"import {ThunkType} from \"./store\"\r\nimport {authApi} from \"../api/auth-api\";\r\nimport {setIsLoggedIn} from \"./auth-reducer\";\r\nimport {setProfile} from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: false,\r\n    //true if app already/successfully initialized (user authentication, settings etc.)\r\n    isInitialized: false,\r\n    appInfo: 'Ready to learn?',\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-LOADING':\r\n            return {...state, isLoading: action.payload.isLoading}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.payload.error}\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.payload.value}\r\n        case 'APP/SET-APP-INFO':\r\n            return {...state, appInfo: action.payload.message}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport const setAppError = (error: boolean) => ({type: 'APP/SET-ERROR', payload: {error}} as const)\r\nexport const setAppIsLoading = (isLoading: boolean) => ({type: 'APP/SET-IS-LOADING', payload: {isLoading}} as const)\r\nexport const setAppInitialized = (value: boolean) => ({type: 'APP/SET-IS-INITIALIZED', payload: {value}} as const)\r\nexport const setAppInfo = (message: string) => ({type: 'APP/SET-APP-INFO', payload: {message}} as const)\r\n\r\n//Thunk Creators\r\nexport const initializeApp = (): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        let res = await authApi.authMe();\r\n        dispatch(setIsLoggedIn(true));\r\n        dispatch(setProfile(res.data))\r\n    } catch (e: any) {\r\n        // dispatch(setAppError(true))\r\n        // dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppInitialized(true));\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n};\r\n\r\n\r\n//Types\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppError>\r\nexport type SetAppIsLoadingActionType = ReturnType<typeof setAppIsLoading>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitialized>\r\nexport type SetAppInfoActionType = ReturnType<typeof setAppInfo>\r\n\r\nexport type AppActionsType =\r\n    | SetAppInitializedActionType\r\n    | SetAppIsLoadingActionType\r\n    | SetAppErrorActionType\r\n    | SetAppInfoActionType\r\n\r\n","D:\\cards-proj\\src\\redux\\auth-reducer.ts",["283","284","285","286","287","288","289","290","291","292"],"import {authApi, SignInData} from \"../api/auth-api\";\r\nimport {ThunkType} from \"./store\";\r\nimport {appReducer, setAppError, setAppInfo, setAppIsLoading} from \"./app-reducer\";\r\nimport {ProfileInitialState, setProfile} from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET-IS-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.payload.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport const setIsLoggedIn = (value: boolean) => ({\r\n    type: 'auth/SET-IS-LOGGED-IN', payload: {value}\r\n} as const)\r\n\r\n\r\n//Thunks Creators\r\nexport const login = (signInData: SignInData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        let res = await authApi.signIn(signInData);\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setProfile(res.data))\r\n        dispatch(setAppInfo('You are logged in!'));\r\n    } catch (e: any) {\r\n        console.log(e as Error)\r\n        setAppError(true)\r\n        dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const logOut = (): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await authApi.signOut();\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setProfile(ProfileInitialState.profile))\r\n        dispatch(setAppInfo('See you again!'))\r\n    } catch (e: any) {\r\n        console.log(e as Error)\r\n        setAppError(true)\r\n        dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\n// Types\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type SetIsLoggedInActionType = ReturnType<typeof setIsLoggedIn>\r\n\r\nexport type AuthActionsType = |SetIsLoggedInActionType\r\n\r\n","D:\\cards-proj\\src\\redux\\decks-reducer.ts",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import {AppRootStateType, ThunkType} from \"./store\"\r\nimport {\r\n    CardsPackResponse,\r\n    DeleteCardsPackData,\r\n    GetCardPacksQueryParams,\r\n    NewCardsPackData,\r\n    packsAPI,\r\n    UpdateCardsPackData\r\n} from \"../api/packs-api\";\r\nimport {setAppError, setAppInfo, setAppIsLoading} from \"./app-reducer\";\r\n\r\nexport const initialState: PacksInitialState = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    page: 5,\r\n    pageCount: 10,\r\n    privatePacks: false,\r\n    sortBy: undefined,\r\n    currentCardsCount: [0, 0],\r\n    countPerPage: [10, 25, 50]\r\n}\r\n\r\nexport const decksReducer = (state: PacksInitialState = initialState, action: DecksActionsType): PacksInitialState => {\r\n    switch (action.type) {\r\n        case 'DECKS/SET-DECKS':\r\n            return {...state, ...action.payload}\r\n        case 'DECKS/SET-CURRENT-PAGE':\r\n            return {...state, page: action.payload.pageNum}\r\n        case 'DECKS/SET-DECKS-PER-PAGE':\r\n            return {...state, pageCount: action.payload.count}\r\n        case 'DECKS/SET-DECKS-TOTAL-COUNT':\r\n            return {...state, cardPacksTotalCount: action.payload.count}\r\n        case 'DECKS/SET-DECKS-MIN-MAX-COUNT':\r\n            return {\r\n                ...state, minCardsCount: action.payload.values[0],\r\n                maxCardsCount: action.payload.values[1],\r\n            }\r\n        case 'DECKS/SET-DECKS-SORTING-METHOD':\r\n            return {...state, sortBy: action.payload.method, page: 1}\r\n        case'DECKS/SET-PRIVATE-DECKS':\r\n            return {...state, privatePacks: action.payload.value}\r\n        case 'DECKS/SET-CURRENT-CARDS-COUNT':\r\n            return {...state, currentCardsCount: [...action.payload.values]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport const setDecks = (payload: CardsPackResponse) => ({type: 'DECKS/SET-DECKS', payload} as const)\r\nexport const setDecksCurrentPage = (pageNum: number) => ({type: 'DECKS/SET-CURRENT-PAGE', payload: {pageNum}} as const)\r\nexport const setDecksPerPage = (count: number) => ({type: 'DECKS/SET-DECKS-PER-PAGE', payload: {count}} as const)\r\nexport const setDecksTotalCount = (count: number) => ({type: 'DECKS/SET-DECKS-TOTAL-COUNT', payload: {count}} as const)\r\nexport const setDecksMinMaxCount = (values: number[]) => ({\r\n    type: 'DECKS/SET-DECKS-MIN-MAX-COUNT',\r\n    payload: {values}\r\n} as const)\r\nexport const setPrivateDecks = (value: boolean) => ({type: 'DECKS/SET-PRIVATE-DECKS', payload: {value}} as const);\r\nexport const setDecksSortingMethod = (method: string) => {\r\n    return {type: 'DECKS/SET-DECKS-SORTING-METHOD', payload: {method}} as const;\r\n};\r\nexport const setCurrentCardsCount = (values: number[]) => {\r\n    return {type: 'DECKS/SET-CURRENT-CARDS-COUNT', payload: {values}} as const;\r\n};\r\n\r\n//Thunk Creators\r\nexport const fetchCardsPacks = (payload?: GetCardPacksQueryParams): ThunkType =>\r\n    async (dispatch, getState: () => AppRootStateType) => {\r\n        const decks = getState().decks\r\n        const userID = decks.privatePacks && getState().profile.profile?._id\r\n        dispatch(setAppIsLoading(true))\r\n        try {\r\n\r\n            const res = await packsAPI.getCardPacks({\r\n                page: decks.page,\r\n                pageCount: decks.pageCount,\r\n                min: decks.currentCardsCount[0],\r\n                max: decks.currentCardsCount[1],\r\n                packName: payload?.packName || undefined,\r\n                user_id: userID || undefined,\r\n                sortPacks: decks.sortBy\r\n            });\r\n            dispatch(setDecks(res.data));\r\n            dispatch(setAppInfo('Cards are ready to study!'));\r\n            console.log(res.data)\r\n        } catch (e: any) {\r\n             // dispatch(setAppError(true));\r\n             // dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n        } finally {\r\n            dispatch(setAppIsLoading(false))\r\n        }\r\n    };\r\n\r\n\r\nexport const postDeck = (payload: NewCardsPackData): ThunkType => async dispatch => {\r\n    dispatch(setAppIsLoading(true));\r\n    try {\r\n        await packsAPI.createCardsPack(payload);\r\n        await dispatch(fetchCardsPacks());\r\n        dispatch(setAppInfo('Deck was created!'))\r\n    } catch (e:any) {\r\n        console.log((e as Error).message);\r\n        dispatch(setAppError(true));\r\n        dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false));\r\n    }\r\n};\r\n\r\nexport const deleteDeck = (payload: DeleteCardsPackData): ThunkType => async dispatch => {\r\n    dispatch(setAppIsLoading(true));\r\n    try {\r\n        await packsAPI.deleteCardsPack(payload);\r\n        await dispatch(fetchCardsPacks());\r\n        dispatch(setAppInfo('Deck was deleted!'))\r\n    } catch (e:any) {\r\n        console.log((e as Error).message);\r\n        dispatch(setAppError(true));\r\n        dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false));\r\n    }\r\n};\r\n\r\nexport const updateDeck = (payload: UpdateCardsPackData): ThunkType => async dispatch => {\r\n    dispatch(setAppIsLoading(true));\r\n    try {\r\n        await packsAPI.updateCardsPack(payload);\r\n        await dispatch(fetchCardsPacks());\r\n        dispatch(setAppInfo('Deck was updated!'));\r\n    } catch (e:any) {\r\n        console.log((e as Error).message);\r\n        dispatch(setAppError(true));\r\n        dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false));\r\n    }\r\n};\r\n\r\n\r\n//Types\r\nexport type PacksInitialState = CardsPackResponse & {\r\n    privatePacks: boolean\r\n    sortBy: string | undefined\r\n    currentCardsCount: number[]\r\n    countPerPage: number[]\r\n}\r\n\r\nexport type SetDecksActionType = ReturnType<typeof setDecks>\r\nexport type SetDecksCurrentPageActionType = ReturnType<typeof setDecksCurrentPage>\r\nexport type SetDecksPerPageActionType = ReturnType<typeof setDecksPerPage>\r\nexport type SetDecksTotalCountActionType = ReturnType<typeof setDecksTotalCount>\r\nexport type SetDecksMinMaxCountActionType = ReturnType<typeof setDecksMinMaxCount>\r\nexport type SetPrivateDecksActionType = ReturnType<typeof setPrivateDecks>\r\nexport type SetDecksSortingMethodActionType = ReturnType<typeof setDecksSortingMethod>\r\nexport type SetCurrentCardsCountActionType = ReturnType<typeof setCurrentCardsCount>\r\n\r\nexport type DecksActionsType =\r\n    | SetDecksActionType\r\n    | SetDecksCurrentPageActionType\r\n    | SetDecksPerPageActionType\r\n    | SetDecksTotalCountActionType\r\n    | SetPrivateDecksActionType\r\n    | SetDecksMinMaxCountActionType\r\n    | SetDecksSortingMethodActionType\r\n    | SetCurrentCardsCountActionType\r\n\r\n","D:\\cards-proj\\src\\redux\\newPassword-reducer.ts",[],"D:\\cards-proj\\src\\redux\\profile-reducer.ts",[],"D:\\cards-proj\\src\\redux\\restorePassword-reducer.ts",[],"D:\\cards-proj\\src\\redux\\signUp-reducer.ts",["309","310","311","312","313"],"import {authApi, SignUpData} from \"../api/auth-api\"\r\nimport {ThunkType} from \"./store\";\r\nimport {setAppError, setAppInfo, setAppIsLoading} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    signUpSuccess: false\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: SignUpActionsType) => {\r\n    switch (action.type) {\r\n        case 'SIGN-UP/SET-SIGN-UP':\r\n            return {\r\n                ...state, signUpSuccess: action.payload.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ACTION CREATORS\r\nexport const setSignedUpSuccess = (value: boolean) => ({\r\n    type: 'SIGN-UP/SET-SIGN-UP',\r\n    payload: {value}\r\n} as const)\r\n\r\n//THUNK CREATORS\r\nexport const signUp = (signUpData: SignUpData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const res = await authApi.signUp(signUpData)\r\n        console.log(res.data)\r\n        dispatch(setSignedUpSuccess(true))\r\n        dispatch(setAppInfo('Congratulations! Your registration is confirmed.'))\r\n    } catch (e: any) {\r\n        console.log(e as Error)\r\n        dispatch(setAppError(e.response ? e.response.data.error.toUpperCase() : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n        dispatch(setSignedUpSuccess(false));\r\n    }\r\n}\r\n\r\n//TYPES\r\nexport type initialStateType = typeof initialState\r\n\r\nexport type SignUpSuccessActionType = ReturnType<typeof setSignedUpSuccess>\r\nexport type SignUpActionsType =\r\n    |SignUpSuccessActionType","D:\\cards-proj\\src\\redux\\store.ts",["314"],"import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {restorePasswordReducer} from \"./restorePassword-reducer\";\r\nimport {SignUpActionsType, signUpReducer} from \"./signUp-reducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {DecksActionsType, decksReducer} from \"./decks-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    newPassword: newPasswordReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    signUp: signUpReducer,\r\n    decks:decksReducer\r\n})\r\n\r\nconst middlewareEnhancer = applyMiddleware(thunk)\r\nconst composeEnhancers = composeWithDevTools(middlewareEnhancer)\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers)\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type RootActionsType =\r\n    SignUpActionsType\r\n    | ProfileActionsType\r\n    | AppActionsType\r\n    | AuthActionsType\r\n    |DecksActionsType;\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, RootActionsType>;\r\n\r\n//export const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n\r\n// @ts-ignore\r\nwindow.store = store","D:\\cards-proj\\src\\reportWebVitals.ts",["315"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\cards-proj\\src\\setupTests.ts",[],{"ruleId":"316","severity":1,"message":"317","line":1,"column":8,"nodeType":"318","messageId":"319","endLine":1,"endColumn":13},{"ruleId":"316","severity":1,"message":"320","line":4,"column":9,"nodeType":"318","messageId":"319","endLine":4,"endColumn":23},{"ruleId":"316","severity":1,"message":"321","line":6,"column":9,"nodeType":"318","messageId":"319","endLine":6,"endColumn":20},{"ruleId":"322","severity":2,"message":"323","line":30,"column":47,"nodeType":"324","messageId":"325","endLine":30,"endColumn":63},{"ruleId":"316","severity":1,"message":"326","line":3,"column":30,"nodeType":"318","messageId":"319","endLine":3,"endColumn":45},{"ruleId":"327","severity":2,"message":"328","line":24,"column":9,"nodeType":"318","messageId":"329","endLine":24,"endColumn":21,"fix":"330"},{"ruleId":"327","severity":2,"message":"331","line":25,"column":9,"nodeType":"318","messageId":"329","endLine":25,"endColumn":25,"fix":"332"},{"ruleId":"322","severity":2,"message":"323","line":38,"column":33,"nodeType":"324","messageId":"325","endLine":38,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":41,"column":33,"nodeType":"324","messageId":"325","endLine":41,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":44,"column":33,"nodeType":"324","messageId":"325","endLine":44,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":47,"column":33,"nodeType":"324","messageId":"325","endLine":47,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":52,"column":33,"nodeType":"324","messageId":"325","endLine":52,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":55,"column":33,"nodeType":"324","messageId":"325","endLine":55,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":59,"column":33,"nodeType":"324","messageId":"325","endLine":59,"endColumn":57},{"ruleId":"322","severity":2,"message":"323","line":62,"column":33,"nodeType":"324","messageId":"325","endLine":62,"endColumn":57},{"ruleId":"322","severity":2,"message":"333","line":15,"column":70,"nodeType":"318","messageId":"325","endLine":15,"endColumn":79},{"ruleId":"316","severity":1,"message":"334","line":11,"column":9,"nodeType":"318","messageId":"319","endLine":11,"endColumn":13},{"ruleId":"316","severity":1,"message":"335","line":13,"column":20,"nodeType":"318","messageId":"319","endLine":13,"endColumn":33},{"ruleId":"316","severity":1,"message":"336","line":24,"column":9,"nodeType":"318","messageId":"319","endLine":24,"endColumn":18},{"ruleId":"322","severity":2,"message":"333","line":53,"column":51,"nodeType":"318","messageId":"325","endLine":53,"endColumn":64},{"ruleId":"316","severity":1,"message":"337","line":24,"column":12,"nodeType":"318","messageId":"319","endLine":24,"endColumn":16},{"ruleId":"322","severity":2,"message":"333","line":36,"column":87,"nodeType":"318","messageId":"325","endLine":36,"endColumn":96},{"ruleId":"338","severity":1,"message":"339","line":8,"column":31,"nodeType":"340","messageId":"341","endLine":8,"endColumn":34,"suggestions":"342"},{"ruleId":"316","severity":1,"message":"334","line":13,"column":9,"nodeType":"318","messageId":"319","endLine":13,"endColumn":13},{"ruleId":"343","severity":2,"message":"344","line":26,"column":25,"nodeType":"345","messageId":"346","endLine":26,"endColumn":39},{"ruleId":"343","severity":2,"message":"344","line":26,"column":25,"nodeType":"345","messageId":"346","endLine":26,"endColumn":35},{"ruleId":"338","severity":1,"message":"339","line":8,"column":31,"nodeType":"340","messageId":"341","endLine":8,"endColumn":34,"suggestions":"347"},{"ruleId":"343","severity":2,"message":"344","line":26,"column":22,"nodeType":"345","messageId":"346","endLine":26,"endColumn":33},{"ruleId":"343","severity":2,"message":"344","line":26,"column":22,"nodeType":"345","messageId":"346","endLine":26,"endColumn":29},{"ruleId":"348","severity":2,"message":"349","line":3,"column":26,"nodeType":"350","messageId":"351","endLine":3,"endColumn":51,"fix":"352"},{"ruleId":"316","severity":1,"message":"353","line":4,"column":11,"nodeType":"318","messageId":"319","endLine":4,"endColumn":19},{"ruleId":"316","severity":1,"message":"354","line":6,"column":9,"nodeType":"318","messageId":"319","endLine":6,"endColumn":20},{"ruleId":"316","severity":1,"message":"355","line":1,"column":48,"nodeType":"318","messageId":"319","endLine":1,"endColumn":56},{"ruleId":"316","severity":1,"message":"356","line":34,"column":9,"nodeType":"318","messageId":"319","endLine":34,"endColumn":22},{"ruleId":"316","severity":1,"message":"357","line":35,"column":9,"nodeType":"318","messageId":"319","endLine":35,"endColumn":22},{"ruleId":"316","severity":1,"message":"353","line":15,"column":11,"nodeType":"318","messageId":"319","endLine":15,"endColumn":19},{"ruleId":"316","severity":1,"message":"354","line":4,"column":9,"nodeType":"318","messageId":"319","endLine":4,"endColumn":20},{"ruleId":"316","severity":1,"message":"358","line":8,"column":15,"nodeType":"318","messageId":"319","endLine":8,"endColumn":20},{"ruleId":"316","severity":1,"message":"358","line":10,"column":15,"nodeType":"318","messageId":"319","endLine":10,"endColumn":20},{"ruleId":"316","severity":1,"message":"359","line":11,"column":15,"nodeType":"318","messageId":"319","endLine":11,"endColumn":23},{"ruleId":"316","severity":1,"message":"353","line":12,"column":15,"nodeType":"318","messageId":"319","endLine":12,"endColumn":23},{"ruleId":"316","severity":1,"message":"360","line":1,"column":20,"nodeType":"318","messageId":"319","endLine":1,"endColumn":31},{"ruleId":"316","severity":1,"message":"358","line":15,"column":15,"nodeType":"318","messageId":"319","endLine":15,"endColumn":20},{"ruleId":"361","severity":2,"message":"362","line":25,"column":48,"nodeType":"363","messageId":"364","endLine":25,"endColumn":49,"suggestions":"365"},{"ruleId":"327","severity":2,"message":"366","line":39,"column":13,"nodeType":"318","messageId":"329","endLine":39,"endColumn":16,"fix":"367"},{"ruleId":"338","severity":1,"message":"339","line":42,"column":17,"nodeType":"340","messageId":"341","endLine":42,"endColumn":20,"suggestions":"368"},{"ruleId":"316","severity":1,"message":"369","line":3,"column":9,"nodeType":"318","messageId":"319","endLine":3,"endColumn":19},{"ruleId":"327","severity":2,"message":"366","line":29,"column":13,"nodeType":"318","messageId":"329","endLine":29,"endColumn":16,"fix":"370"},{"ruleId":"338","severity":1,"message":"339","line":33,"column":17,"nodeType":"340","messageId":"341","endLine":33,"endColumn":20,"suggestions":"371"},{"ruleId":"372","severity":2,"message":"373","line":36,"column":29,"nodeType":"374","messageId":"375","endLine":36,"endColumn":67},{"ruleId":"376","severity":2,"message":"377","line":36,"column":29,"nodeType":"378","messageId":"379","endLine":36,"endColumn":39},{"ruleId":"376","severity":2,"message":"377","line":36,"column":42,"nodeType":"378","messageId":"379","endLine":36,"endColumn":52},{"ruleId":"338","severity":1,"message":"339","line":49,"column":17,"nodeType":"340","messageId":"341","endLine":49,"endColumn":20,"suggestions":"380"},{"ruleId":"372","severity":2,"message":"373","line":52,"column":29,"nodeType":"374","messageId":"375","endLine":52,"endColumn":67},{"ruleId":"376","severity":2,"message":"377","line":52,"column":29,"nodeType":"378","messageId":"379","endLine":52,"endColumn":39},{"ruleId":"376","severity":2,"message":"377","line":52,"column":42,"nodeType":"378","messageId":"379","endLine":52,"endColumn":52},{"ruleId":"338","severity":1,"message":"339","line":88,"column":21,"nodeType":"340","messageId":"341","endLine":88,"endColumn":24,"suggestions":"381"},{"ruleId":"382","severity":2,"message":"383","line":101,"column":9,"nodeType":"384","messageId":"385","endLine":101,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":103,"column":16,"nodeType":"340","messageId":"341","endLine":103,"endColumn":19,"suggestions":"386"},{"ruleId":"372","severity":2,"message":"373","line":106,"column":29,"nodeType":"374","messageId":"375","endLine":106,"endColumn":67},{"ruleId":"376","severity":2,"message":"377","line":106,"column":29,"nodeType":"378","messageId":"379","endLine":106,"endColumn":39},{"ruleId":"376","severity":2,"message":"377","line":106,"column":42,"nodeType":"378","messageId":"379","endLine":106,"endColumn":52},{"ruleId":"382","severity":2,"message":"383","line":116,"column":9,"nodeType":"384","messageId":"385","endLine":116,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":118,"column":16,"nodeType":"340","messageId":"341","endLine":118,"endColumn":19,"suggestions":"387"},{"ruleId":"372","severity":2,"message":"373","line":121,"column":29,"nodeType":"374","messageId":"375","endLine":121,"endColumn":67},{"ruleId":"376","severity":2,"message":"377","line":121,"column":29,"nodeType":"378","messageId":"379","endLine":121,"endColumn":39},{"ruleId":"376","severity":2,"message":"377","line":121,"column":42,"nodeType":"378","messageId":"379","endLine":121,"endColumn":52},{"ruleId":"382","severity":2,"message":"383","line":131,"column":9,"nodeType":"384","messageId":"385","endLine":131,"endColumn":42},{"ruleId":"338","severity":1,"message":"339","line":133,"column":16,"nodeType":"340","messageId":"341","endLine":133,"endColumn":19,"suggestions":"388"},{"ruleId":"372","severity":2,"message":"373","line":136,"column":29,"nodeType":"374","messageId":"375","endLine":136,"endColumn":67},{"ruleId":"376","severity":2,"message":"377","line":136,"column":29,"nodeType":"378","messageId":"379","endLine":136,"endColumn":39},{"ruleId":"376","severity":2,"message":"377","line":136,"column":42,"nodeType":"378","messageId":"379","endLine":136,"endColumn":52},{"ruleId":"338","severity":1,"message":"339","line":34,"column":17,"nodeType":"340","messageId":"341","endLine":34,"endColumn":20,"suggestions":"389"},{"ruleId":"372","severity":2,"message":"390","line":36,"column":30,"nodeType":"374","messageId":"375","endLine":36,"endColumn":82},{"ruleId":"376","severity":2,"message":"377","line":36,"column":30,"nodeType":"378","messageId":"379","endLine":36,"endColumn":40},{"ruleId":"376","severity":2,"message":"377","line":36,"column":43,"nodeType":"378","messageId":"379","endLine":36,"endColumn":53},{"ruleId":"391","severity":2,"message":"392","line":36,"column":43,"nodeType":"378","messageId":"393","endLine":36,"endColumn":76},{"ruleId":"394","severity":2,"message":"395","line":42,"column":1,"nodeType":"396","messageId":"397","endLine":42,"endColumn":14},{"ruleId":"398","severity":2,"message":"399","line":5,"column":5,"nodeType":"400","messageId":"401","endLine":11,"endColumn":8,"suggestions":"402"},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useAppSelector' is defined but never used.","'useNavigate' is defined but never used.","@typescript-eslint/restrict-template-expressions","Invalid type \"string | false\" of template literal expression.","LogicalExpression","invalidType","'setDecksPerPage' is defined but never used.","prefer-const","'pageNextStep' is never reassigned. Use 'const' instead.","useConst",{"range":"403","text":"404"},"'pagePreviousStep' is never reassigned. Use 'const' instead.",{"range":"405","text":"406"},"Invalid type \"string | undefined\" of template literal expression.","'type' is defined but never used.","'spanClassName' is defined but never used.","'autoFocus' is defined but never used.","'text' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["407","408"],"@typescript-eslint/restrict-plus-operands","Operands of '+' operation must either be both strings or both numbers. Consider using a template literal.","BinaryExpression","notStrings",["409","410"],"@typescript-eslint/no-inferrable-types","Type boolean trivially inferred from a boolean literal, remove type annotation.","AssignmentPattern","noInferrableType",{"range":"411","text":"412"},"'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","'minCardsCount' is assigned a value but never used.","'maxCardsCount' is assigned a value but never used.","'error' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useCallback' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["413","414"],"'res' is never reassigned. Use 'const' instead.",{"range":"415","text":"416"},["417","418"],"'appReducer' is defined but never used.",{"range":"419","text":"420"},["421","422"],"@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `string`.","ConditionalExpression","unsafeArgument","@typescript-eslint/no-unsafe-member-access","Unsafe member access .response on an `any` value.","MemberExpression","unsafeMemberExpression",["423","424"],["425","426"],"@typescript-eslint/await-thenable","Unexpected `await` of a non-Promise (non-\"Thenable\") value.","AwaitExpression","await",["427","428"],["429","430"],["431","432"],["433","434"],"Unsafe argument of type `any` assigned to a parameter of type `boolean`.","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["435"],[800,888],"const pageNextStep = (currentPage + step) > pageNumbers ? pageNumbers : currentPage + step",[894,966],"const pagePreviousStep = (currentPage - step) < 1 ? 1 : currentPage - step",{"messageId":"436","fix":"437","desc":"438"},{"messageId":"439","fix":"440","desc":"441"},{"messageId":"436","fix":"442","desc":"438"},{"messageId":"439","fix":"443","desc":"441"},[68,77],"",{"messageId":"444","fix":"445","desc":"446"},{"messageId":"447","fix":"448","desc":"449"},[1600,1633],"const res = await authApi.authMe();",{"messageId":"436","fix":"450","desc":"438"},{"messageId":"439","fix":"451","desc":"441"},[904,947],"const res = await authApi.signIn(signInData);",{"messageId":"436","fix":"452","desc":"438"},{"messageId":"439","fix":"453","desc":"441"},{"messageId":"436","fix":"454","desc":"438"},{"messageId":"439","fix":"455","desc":"441"},{"messageId":"436","fix":"456","desc":"438"},{"messageId":"439","fix":"457","desc":"441"},{"messageId":"436","fix":"458","desc":"438"},{"messageId":"439","fix":"459","desc":"441"},{"messageId":"436","fix":"460","desc":"438"},{"messageId":"439","fix":"461","desc":"441"},{"messageId":"436","fix":"462","desc":"438"},{"messageId":"439","fix":"463","desc":"441"},{"messageId":"436","fix":"464","desc":"438"},{"messageId":"439","fix":"465","desc":"441"},{"messageId":"466","fix":"467","desc":"468"},"suggestUnknown",{"range":"469","text":"470"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"469","text":"471"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"472","text":"470"},{"range":"472","text":"471"},"removeEscape",{"range":"473","text":"412"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"474","text":"475"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"476","text":"470"},{"range":"476","text":"471"},{"range":"477","text":"470"},{"range":"477","text":"471"},{"range":"478","text":"470"},{"range":"478","text":"471"},{"range":"479","text":"470"},{"range":"479","text":"471"},{"range":"480","text":"470"},{"range":"480","text":"471"},{"range":"481","text":"470"},{"range":"481","text":"471"},{"range":"482","text":"470"},{"range":"482","text":"471"},{"range":"483","text":"470"},{"range":"483","text":"471"},"floatingFixVoid",{"range":"484","text":"485"},"Add void operator to ignore.",[340,343],"unknown","never",[359,362],[1118,1119],[1118,1118],"\\",[1731,1734],[1097,1100],[1616,1619],[3710,3713],[4229,4232],[4764,4767],[5300,5303],[1070,1073],[164,384],"void import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });"]