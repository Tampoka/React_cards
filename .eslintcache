[{"D:\\cards-proj\\src\\api\\auth-api.ts":"1","D:\\cards-proj\\src\\api\\cards-api.ts":"2","D:\\cards-proj\\src\\api\\packs-api.ts":"3","D:\\cards-proj\\src\\app\\App.tsx":"4","D:\\cards-proj\\src\\app\\AppRoutes.tsx":"5","D:\\cards-proj\\src\\App.test.tsx":"6","D:\\cards-proj\\src\\common\\components\\BgLoader\\BgLoader.tsx":"7","D:\\cards-proj\\src\\common\\components\\Header\\Header.tsx":"8","D:\\cards-proj\\src\\common\\components\\InfoAlert\\Alert.tsx":"9","D:\\cards-proj\\src\\common\\components\\InfoAlert\\AlertMessage.tsx":"10","D:\\cards-proj\\src\\common\\components\\Loader\\Loader.tsx":"11","D:\\cards-proj\\src\\common\\components\\Main\\Main.tsx":"12","D:\\cards-proj\\src\\common\\components\\Modal\\Modal.tsx":"13","D:\\cards-proj\\src\\common\\components\\PacksPagination\\PacksPagination.tsx":"14","D:\\cards-proj\\src\\common\\components\\Pagination\\Pagination.tsx":"15","D:\\cards-proj\\src\\common\\components\\Search\\Search.tsx":"16","D:\\cards-proj\\src\\common\\components\\Spinner\\Spinner.tsx":"17","D:\\cards-proj\\src\\common\\components\\SuperButton\\SuperButton.tsx":"18","D:\\cards-proj\\src\\common\\components\\SuperCheckbox\\SuperCheckbox.tsx":"19","D:\\cards-proj\\src\\common\\components\\SuperEditableSpan\\SuperEditableSpan.tsx":"20","D:\\cards-proj\\src\\common\\components\\SuperInputText\\SuperInputText.tsx":"21","D:\\cards-proj\\src\\common\\components\\SuperRadio\\SuperRadio.tsx":"22","D:\\cards-proj\\src\\common\\components\\SuperSelect\\SuperSelect.tsx":"23","D:\\cards-proj\\src\\common\\hooks\\useDebounce.ts":"24","D:\\cards-proj\\src\\common\\hooks\\useModal.ts":"25","D:\\cards-proj\\src\\index.tsx":"26","D:\\cards-proj\\src\\pages\\Cards\\Cards.tsx":"27","D:\\cards-proj\\src\\pages\\Decks\\AddDeckForm\\AddDeckForm.tsx":"28","D:\\cards-proj\\src\\pages\\Decks\\BtnBlock\\BtnBlock.tsx":"29","D:\\cards-proj\\src\\pages\\Decks\\Decks.tsx":"30","D:\\cards-proj\\src\\pages\\Decks\\DecksTable\\DecksTable.tsx":"31","D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckForm\\UpdateDeckForm.tsx":"32","D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckModal\\UpdateDeckModal.tsx":"33","D:\\cards-proj\\src\\pages\\Error404\\Error404.tsx":"34","D:\\cards-proj\\src\\pages\\Login\\Login.tsx":"35","D:\\cards-proj\\src\\pages\\Login\\LoginForm.tsx":"36","D:\\cards-proj\\src\\pages\\NewPassword\\NewPassword.tsx":"37","D:\\cards-proj\\src\\pages\\Profile\\Profile.tsx":"38","D:\\cards-proj\\src\\pages\\RestorePassword\\RestorePassword.tsx":"39","D:\\cards-proj\\src\\pages\\SignUp\\SignUp2.tsx":"40","D:\\cards-proj\\src\\pages\\SignUp\\SignUpForm2.tsx":"41","D:\\cards-proj\\src\\pages\\Test\\TestingComponents.tsx":"42","D:\\cards-proj\\src\\react-app-env.d.ts":"43","D:\\cards-proj\\src\\redux\\app-reducer.ts":"44","D:\\cards-proj\\src\\redux\\auth-reducer.ts":"45","D:\\cards-proj\\src\\redux\\decks-reducer.ts":"46","D:\\cards-proj\\src\\redux\\newPassword-reducer.ts":"47","D:\\cards-proj\\src\\redux\\profile-reducer.ts":"48","D:\\cards-proj\\src\\redux\\restorePassword-reducer.ts":"49","D:\\cards-proj\\src\\redux\\signUp-reducer.ts":"50","D:\\cards-proj\\src\\redux\\store.ts":"51","D:\\cards-proj\\src\\reportWebVitals.ts":"52","D:\\cards-proj\\src\\setupTests.ts":"53"},{"size":1345,"mtime":1642673992374,"results":"54","hashOfConfig":"55"},{"size":2208,"mtime":1642675722420,"results":"56","hashOfConfig":"55"},{"size":1694,"mtime":1642674055610,"results":"57","hashOfConfig":"55"},{"size":862,"mtime":1642673904162,"results":"58","hashOfConfig":"55"},{"size":1617,"mtime":1642674218450,"results":"59","hashOfConfig":"55"},{"size":277,"mtime":1642673952145,"results":"60","hashOfConfig":"55"},{"size":249,"mtime":1642173577867,"results":"61","hashOfConfig":"55"},{"size":1428,"mtime":1642674262799,"results":"62","hashOfConfig":"55"},{"size":662,"mtime":1642674966119,"results":"63","hashOfConfig":"55"},{"size":937,"mtime":1642673904142,"results":"64","hashOfConfig":"55"},{"size":230,"mtime":1641887256202,"results":"65","hashOfConfig":"55"},{"size":298,"mtime":1642290146876,"results":"66","hashOfConfig":"55"},{"size":648,"mtime":1642674288642,"results":"67","hashOfConfig":"55"},{"size":1432,"mtime":1642674316699,"results":"68","hashOfConfig":"55"},{"size":2593,"mtime":1642674989649,"results":"69","hashOfConfig":"55"},{"size":1261,"mtime":1642673904158,"results":"70","hashOfConfig":"55"},{"size":239,"mtime":1641887998337,"results":"71","hashOfConfig":"55"},{"size":692,"mtime":1641869890107,"results":"72","hashOfConfig":"55"},{"size":1224,"mtime":1642675006561,"results":"73","hashOfConfig":"55"},{"size":3793,"mtime":1642675083363,"results":"74","hashOfConfig":"55"},{"size":1790,"mtime":1642590829084,"results":"75","hashOfConfig":"55"},{"size":1475,"mtime":1642675143069,"results":"76","hashOfConfig":"55"},{"size":1559,"mtime":1642675163230,"results":"77","hashOfConfig":"55"},{"size":413,"mtime":1642468809185,"results":"78","hashOfConfig":"55"},{"size":380,"mtime":1642675188239,"results":"79","hashOfConfig":"55"},{"size":745,"mtime":1642674366279,"results":"80","hashOfConfig":"55"},{"size":131,"mtime":1642675205638,"results":"81","hashOfConfig":"55"},{"size":1513,"mtime":1642674423903,"results":"82","hashOfConfig":"55"},{"size":850,"mtime":1642674434461,"results":"83","hashOfConfig":"55"},{"size":3582,"mtime":1642675278914,"results":"84","hashOfConfig":"55"},{"size":2913,"mtime":1642674481302,"results":"85","hashOfConfig":"55"},{"size":1646,"mtime":1642675549991,"results":"86","hashOfConfig":"55"},{"size":879,"mtime":1642673904129,"results":"87","hashOfConfig":"55"},{"size":177,"mtime":1641825198863,"results":"88","hashOfConfig":"55"},{"size":719,"mtime":1642675336635,"results":"89","hashOfConfig":"55"},{"size":4221,"mtime":1642674540513,"results":"90","hashOfConfig":"55"},{"size":171,"mtime":1640759133552,"results":"91","hashOfConfig":"55"},{"size":793,"mtime":1642675359974,"results":"92","hashOfConfig":"55"},{"size":183,"mtime":1640759133548,"results":"93","hashOfConfig":"55"},{"size":2695,"mtime":1642673904137,"results":"94","hashOfConfig":"55"},{"size":4376,"mtime":1642674656882,"results":"95","hashOfConfig":"55"},{"size":1005,"mtime":1642674720798,"results":"96","hashOfConfig":"55"},{"size":41,"mtime":1640740492319,"results":"97","hashOfConfig":"55"},{"size":2485,"mtime":1642675450461,"results":"98","hashOfConfig":"55"},{"size":2012,"mtime":1642675735847,"results":"99","hashOfConfig":"55"},{"size":6661,"mtime":1642675787813,"results":"100","hashOfConfig":"55"},{"size":773,"mtime":1642052761661,"results":"101","hashOfConfig":"55"},{"size":2164,"mtime":1642221753276,"results":"102","hashOfConfig":"55"},{"size":748,"mtime":1641823117796,"results":"103","hashOfConfig":"55"},{"size":1516,"mtime":1642674823209,"results":"104","hashOfConfig":"55"},{"size":1634,"mtime":1642674890238,"results":"105","hashOfConfig":"55"},{"size":390,"mtime":1642675513970,"results":"106","hashOfConfig":"55"},{"size":241,"mtime":1640740466209,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nl5wfx",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":6,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":9,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cards-proj\\src\\api\\auth-api.ts",[],"D:\\cards-proj\\src\\api\\cards-api.ts",[],"D:\\cards-proj\\src\\api\\packs-api.ts",[],"D:\\cards-proj\\src\\app\\App.tsx",[],"D:\\cards-proj\\src\\app\\AppRoutes.tsx",[],"D:\\cards-proj\\src\\App.test.tsx",[],"D:\\cards-proj\\src\\common\\components\\BgLoader\\BgLoader.tsx",[],"D:\\cards-proj\\src\\common\\components\\Header\\Header.tsx",[],"D:\\cards-proj\\src\\common\\components\\InfoAlert\\Alert.tsx",[],"D:\\cards-proj\\src\\common\\components\\InfoAlert\\AlertMessage.tsx",["228"],"import {useCallback, useEffect, useState} from 'react';\r\nimport s from './AlertMessage.module.scss'\r\n\r\ntype PropsType = {\r\n    error:boolean\r\n    text: string | null\r\n    onClose: () => void\r\n}\r\n\r\nexport const AlertMessage = ({text,onClose,error}:PropsType) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(error||!!text)\r\n\r\n    const closeAlert = useCallback(() => {\r\n        setIsOpen(false)\r\n        onClose()\r\n    }, [onClose,isOpen])\r\n\r\n    useEffect(() => {\r\n        setIsOpen(error||!!text)\r\n        const timeoutID = setTimeout(() => {\r\n            closeAlert()\r\n        }, 5000)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    }, [closeAlert,setIsOpen,error,text])\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n            <div className={`${s.container} ${error && s.error}`}>\r\n                <div>{text}</div>\r\n                <span onClick={closeAlert}>X</span>\r\n            </div>}\r\n        </>\r\n    )\r\n}","D:\\cards-proj\\src\\common\\components\\Loader\\Loader.tsx",[],"D:\\cards-proj\\src\\common\\components\\Main\\Main.tsx",[],"D:\\cards-proj\\src\\common\\components\\Modal\\Modal.tsx",[],"D:\\cards-proj\\src\\common\\components\\PacksPagination\\PacksPagination.tsx",[],"D:\\cards-proj\\src\\common\\components\\Pagination\\Pagination.tsx",["229","230","231","232","233","234","235","236"],"import {useEffect, useState} from 'react';\r\nimport s from './Pagination.module.scss'\r\n\r\ntype PropsType = {\r\n    totalCount: number,\r\n    countPerPage: number,\r\n    currentPage: number,\r\n    onChange: (page: number) => void\r\n    step?: number\r\n}\r\n\r\nexport const Pagination = ({totalCount, countPerPage, currentPage, onChange, step = 10}: PropsType) => {\r\n    const [prevIsHidden, setPrevIsHidden] = useState(false)\r\n    const [nextIsHidden, setNextIsHidden] = useState(false)\r\n\r\n    const pageNumbers: number = Math.ceil(totalCount / countPerPage)\r\n    const pages = []\r\n    for (let i = 1; i <= pageNumbers; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const previousPage = currentPage !== 1 ? currentPage - 1 : 1\r\n    const nextPage = currentPage !== pageNumbers ? currentPage + 1 : pageNumbers\r\n    const pageNextStep = (currentPage + step) > pageNumbers ? pageNumbers : currentPage + step\r\n    const pagePreviousStep = (currentPage - step) < 1 ? 1 : currentPage - step\r\n\r\n    useEffect(() => {\r\n        previousPage === currentPage ? setPrevIsHidden(true) : setPrevIsHidden(false)\r\n        nextPage === currentPage ? setNextIsHidden(true) : setNextIsHidden(false)\r\n    }, [currentPage, nextPage, previousPage])\r\n\r\n    if (isNaN(pageNumbers) || totalCount === 0 || pageNumbers === 1) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <span className={`${prevIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(currentPage - 1)}>Prev</span>\r\n\r\n            <span className={`${prevIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(1)}>Start</span>\r\n\r\n            <span className={`${prevIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(pagePreviousStep)}>...</span>\r\n\r\n            <span className={`${prevIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(previousPage)}>{previousPage !== currentPage && previousPage}</span>\r\n\r\n            <span className={s.active}>{currentPage}</span>\r\n\r\n            <span className={`${nextIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(nextPage)}>{nextPage !== currentPage && nextPage}</span>\r\n\r\n            <span className={`${nextIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(pageNextStep)}>...</span>\r\n\r\n\r\n            <span className={`${nextIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(currentPage + 1)}>Next</span>\r\n\r\n            <span className={`${nextIsHidden && s.hidden}`}\r\n                  onClick={() => onChange(pageNumbers)}>End</span>\r\n\r\n        </div>\r\n    )\r\n}","D:\\cards-proj\\src\\common\\components\\Search\\Search.tsx",[],"D:\\cards-proj\\src\\common\\components\\Spinner\\Spinner.tsx",[],"D:\\cards-proj\\src\\common\\components\\SuperButton\\SuperButton.tsx",["237"],"import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,type,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n            type={type}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","D:\\cards-proj\\src\\common\\components\\SuperCheckbox\\SuperCheckbox.tsx",["238"],"import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.labelContainer}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","D:\\cards-proj\\src\\common\\components\\SuperEditableSpan\\SuperEditableSpan.tsx",["239"],"import React, {DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onBlurHandler?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    defaultValue:string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        spanClassName,\r\n        onBlurHandler,\r\n        defaultValue,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [text, setText] = useState<string>(defaultValue)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n        onBlur && onBlur(e)\r\n        onBlurHandler && onBlurHandler(e.currentTarget.value)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const setSpanClassName = `${s.editableSpan} ${spanClassName} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus={autoFocus} // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onChangeText={setText}\r\n                        value={text}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={setSpanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || text}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","D:\\cards-proj\\src\\common\\components\\SuperInputText\\SuperInputText.tsx",["240","241"],"import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    defaultValue?:string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n            defaultValue,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [text,setText]=useState(defaultValue)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        defaultValue&&setText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput}  ${className}`\r\n\r\n    return (\r\n        <div className={s.inputContainer}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","D:\\cards-proj\\src\\common\\components\\SuperRadio\\SuperRadio.tsx",["242","243","244"],"import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[] | number[]\r\n    onChangeOption?: (option: string | number) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: JSX.Element[] = options\r\n        ? options.map((o, i) => (\r\n            <label key={name + '-' + i}>\r\n                <input\r\n                    type={'radio'}\r\n                    name={name}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    checked={o === value}\r\n                    className={o === value ? s.radioSelected : s.radio}\r\n                    {...restProps}\r\n                    // name, checked, value, onChange\r\n                />\r\n                {o}\r\n            </label>\r\n        ))\r\n        : []\r\n    return (\r\n        <div className={s.radioContainer}>\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","D:\\cards-proj\\src\\common\\components\\SuperSelect\\SuperSelect.tsx",["245","246"],"import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[] | number[]\r\n    onChangeOption?: (option: string|number) => void\r\n    label?: string\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        className,\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => {\r\n        return (\r\n            <option\r\n                className={s.option}\r\n                key={o + ' ' + i}\r\n                value={o}\r\n            >\r\n                {o}\r\n            </option>)\r\n    }) : []// map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const finalSelectClassName = s.select + (className ? ' ' + className : '')\r\n\r\n    return (\r\n        <div className={s.selectContainer}>\r\n            {label && <label className={s.selectLabel}>{label}</label>}\r\n            <select onChange={onChangeCallback}\r\n                    {...restProps}\r\n                    className={finalSelectClassName}\r\n            >\r\n                {mappedOptions}\r\n            </select></div>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","D:\\cards-proj\\src\\common\\hooks\\useDebounce.ts",[],"D:\\cards-proj\\src\\common\\hooks\\useModal.ts",[],"D:\\cards-proj\\src\\index.tsx",[],"D:\\cards-proj\\src\\pages\\Cards\\Cards.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\AddDeckForm\\AddDeckForm.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\BtnBlock\\BtnBlock.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\Decks.tsx",["247","248"],"import React, {useCallback, useEffect, useRef} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppSelector} from '../../redux/store';\r\nimport {\r\n    deleteDeck,\r\n    fetchCardsPacks,\r\n    PacksInitialState,\r\n    postDeck,\r\n    setPrivateDecks,\r\n    updateDeck\r\n} from '../../redux/decks-reducer';\r\nimport {PacksPagination} from '../../common/components/PacksPagination/PacksPagination';\r\nimport s from './Decks.module.scss'\r\nimport {DecksTable} from './DecksTable/DecksTable';\r\nimport Spinner from '../../common/components/Spinner/Spinner';\r\nimport {BtnBlock} from './BtnBlock/BtnBlock';\r\nimport {Search} from '../../common/components/Search/Search';\r\nimport {Modal} from '../../common/components/Modal/Modal';\r\nimport {AddDeckForm} from './AddDeckForm/AddDeckForm';\r\nimport {useModal} from '../../common/hooks/useModal';\r\n\r\nexport const Decks = React.memo(() => {\r\n    // const [modalAddDeck, setModalAddDeck] = useState<boolean>(false)\r\n    const {isOpen, onToggle} = useModal()\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.auth.isLoggedIn)\r\n    const isLoading = useAppSelector<boolean>(state => state.app.isLoading)\r\n    const userId = useAppSelector<string>(state => state.profile.profile._id)\r\n\r\n    const {\r\n        cardPacks,\r\n        cardPacksTotalCount,\r\n        minCardsCount,\r\n        maxCardsCount,\r\n        page,\r\n        pageCount,\r\n        privatePacks,\r\n        sortBy,\r\n        currentCardsCount,\r\n        countPerPage\r\n    } = useAppSelector<PacksInitialState>(state => state.decks)\r\n\r\n    const paginationScrollTopRef = useRef<HTMLHeadingElement>(null)\r\n\r\n    const deleteDeckHandler = useCallback((id: string) => {\r\n        dispatch(deleteDeck({id}));\r\n    }, [dispatch]);\r\n\r\n    const updateDeckHandler = useCallback((id: string, title: string) => {\r\n        dispatch(updateDeck({cardsPack: {_id: id, name: title}}));\r\n    }, [dispatch]);\r\n\r\n    const showPrivate = useCallback((value: boolean) => {\r\n        dispatch(setPrivateDecks(value))\r\n    }, [dispatch])\r\n\r\n    const addNewDeckHandler = useCallback((title: string) => {\r\n        dispatch(postDeck({cardsPack: {name: title}}))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        // if (cardPacks.length === 0) {\r\n        dispatch(fetchCardsPacks())\r\n        // }\r\n\r\n    }, [dispatch, page, pageCount, currentCardsCount, privatePacks, sortBy, isLoggedIn])\r\n\r\n    useEffect(() => {\r\n        paginationScrollTopRef.current?.scrollIntoView({behavior: 'smooth'})\r\n    }, [page, pageCount])\r\n\r\n    if (!isLoggedIn) return <Navigate to='/login'/>\r\n    return (\r\n        <div className={s.decksContainer}>\r\n            <h1 ref={paginationScrollTopRef}>Decks</h1>\r\n            {/*<h1 >Decks</h1>*/}\r\n            {isLoading && <Spinner/>}\r\n            <BtnBlock showPrivate={showPrivate} active={privatePacks} setModal={onToggle}/>\r\n            <Modal visible={isOpen} setVisible={onToggle}>\r\n                <AddDeckForm onSubmitHandler={addNewDeckHandler} isLoading={isLoading}/>\r\n            </Modal>\r\n            <Search/>\r\n            <DecksTable decks={cardPacks}\r\n                        deleteDeckHandler={deleteDeckHandler}\r\n                        updateDeckHandler={updateDeckHandler}\r\n                        userId={userId}/>\r\n            <PacksPagination totalCount={cardPacksTotalCount}\r\n                             pageCount={pageCount}\r\n                             currentPage={page}\r\n                             countPerPage={countPerPage}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","D:\\cards-proj\\src\\pages\\Decks\\DecksTable\\DecksTable.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckForm\\UpdateDeckForm.tsx",[],"D:\\cards-proj\\src\\pages\\Decks\\UpdateDeckModal\\UpdateDeckModal.tsx",[],"D:\\cards-proj\\src\\pages\\Error404\\Error404.tsx",[],"D:\\cards-proj\\src\\pages\\Login\\Login.tsx",[],"D:\\cards-proj\\src\\pages\\Login\\LoginForm.tsx",[],"D:\\cards-proj\\src\\pages\\NewPassword\\NewPassword.tsx",[],"D:\\cards-proj\\src\\pages\\Profile\\Profile.tsx",[],"D:\\cards-proj\\src\\pages\\RestorePassword\\RestorePassword.tsx",[],"D:\\cards-proj\\src\\pages\\SignUp\\SignUp2.tsx",["249","250"],"import {FormEvent,useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {SignUpData} from '../../api/auth-api';\r\nimport {useAppSelector} from '../../redux/store';\r\nimport {setAppError, setAppInfo} from '../../redux/app-reducer';\r\nimport {SignUpForm2} from './SignUpForm2';\r\nimport {signUp} from '../../redux/signUp-reducer';\r\n\r\nexport const SignUp2 = () => {\r\n        const [values, setValues] = useState<SignUpData>({email: '', password: '', confirmPassword: ''});\r\n        const [showPassword, setShowPassword] = useState(false)\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        const error = useAppSelector<boolean>(state => state.app.error);\r\n        const info = useAppSelector<string>(state => state.app.appInfo);\r\n        const isLoading = useAppSelector<boolean>(state => state.app.isLoading);\r\n        const signUpSuccess = useAppSelector<boolean>(state => state.signUp.signUpSuccess);\r\n\r\n        const toggleShowPassword = () => {\r\n            setShowPassword(!showPassword)\r\n        }\r\n\r\n        const validate = () => {\r\n            const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n            if (values.email === '' || values.password === '') {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please fill out all required fields and try again'))\r\n            } else if (!regex.test(values.email)) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please enter valid email address.'))\r\n            } else if (values.password.trim().length <= 7) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Password must be more than 7 characters.'))\r\n            } else if (values.password !== values.confirmPassword) {\r\n                dispatch(setAppError(true))\r\n                dispatch(setAppInfo('Please make sure your passwords match'))\r\n            } else return 1\r\n        }\r\n\r\n        const onSubmitHandler = (e: FormEvent) => {\r\n            e.preventDefault();\r\n            if (validate() === 1) {\r\n                dispatch(signUp(values));\r\n                setValues({email: '', password: '', confirmPassword: ''});\r\n            }\r\n        }\r\n\r\n        return <SignUpForm2 isLoading={isLoading}\r\n                            errorMsg={info}\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            onSubmitHandler={onSubmitHandler}\r\n                            registrationSuccess={signUpSuccess}\r\n                            showPassword={showPassword}\r\n                            toggleShowPassword={toggleShowPassword}\r\n        />;\r\n    }\r\n;\r\n","D:\\cards-proj\\src\\pages\\SignUp\\SignUpForm2.tsx",[],"D:\\cards-proj\\src\\pages\\Test\\TestingComponents.tsx",[],"D:\\cards-proj\\src\\react-app-env.d.ts",[],"D:\\cards-proj\\src\\redux\\app-reducer.ts",["251"],"import {ThunkType} from './store'\r\nimport {authApi} from '../api/auth-api';\r\nimport {setIsLoggedIn} from './auth-reducer';\r\nimport {setProfile} from './profile-reducer';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: false,\r\n    //true if app already/successfully initialized (user authentication, settings etc.)\r\n    isInitialized: false,\r\n    appInfo: 'Ready to learn?',\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-LOADING':\r\n            return {...state, isLoading: action.payload.isLoading}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.payload.error}\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.payload.value}\r\n        case 'APP/SET-APP-INFO':\r\n            return {...state, appInfo: action.payload.message}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport const setAppError = (error: boolean) => ({type: 'APP/SET-ERROR', payload: {error}} as const)\r\nexport const setAppIsLoading = (isLoading: boolean) => ({type: 'APP/SET-IS-LOADING', payload: {isLoading}} as const)\r\nexport const setAppInitialized = (value: boolean) => ({type: 'APP/SET-IS-INITIALIZED', payload: {value}} as const)\r\nexport const setAppInfo = (message: string) => ({type: 'APP/SET-APP-INFO', payload: {message}} as const)\r\n\r\n//Thunk Creators\r\nexport const initializeApp = (): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const res = await authApi.authMe();\r\n        dispatch(setIsLoggedIn(true));\r\n        dispatch(setProfile(res.data))\r\n    } catch (e: any) {\r\n        // dispatch(setAppError(true))\r\n        // dispatch(setAppInfo(e.response ? e.response.data.error : e));\r\n    } finally {\r\n        dispatch(setAppInitialized(true));\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n};\r\n\r\n\r\n//Types\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppError>\r\nexport type SetAppIsLoadingActionType = ReturnType<typeof setAppIsLoading>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitialized>\r\nexport type SetAppInfoActionType = ReturnType<typeof setAppInfo>\r\n\r\nexport type AppActionsType =\r\n    | SetAppInitializedActionType\r\n    | SetAppIsLoadingActionType\r\n    | SetAppErrorActionType\r\n    | SetAppInfoActionType\r\n\r\n","D:\\cards-proj\\src\\redux\\auth-reducer.ts",["252","253","254","255","256","257","258","259"],"D:\\cards-proj\\src\\redux\\decks-reducer.ts",["260","261","262","263","264","265","266","267","268","269","270","271","272"],"D:\\cards-proj\\src\\redux\\newPassword-reducer.ts",[],"D:\\cards-proj\\src\\redux\\profile-reducer.ts",[],"D:\\cards-proj\\src\\redux\\restorePassword-reducer.ts",[],"D:\\cards-proj\\src\\redux\\signUp-reducer.ts",["273","274","275","276","277"],"import {authApi, SignUpData} from '../api/auth-api';\r\nimport {ThunkType} from './store';\r\nimport {setAppError, setAppInfo, setAppIsLoading} from './app-reducer';\r\n\r\nconst initialState = {\r\n    signUpSuccess: false\r\n}\r\n\r\nexport const signUpReducer = (state: initialStateType = initialState, action: SignUpActionsType) => {\r\n    switch (action.type) {\r\n        case 'SIGN-UP/SET-SIGN-UP':\r\n            return {\r\n                ...state, signUpSuccess: action.payload.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ACTION CREATORS\r\nexport const setSignedUpSuccess = (value: boolean) => ({\r\n    type: 'SIGN-UP/SET-SIGN-UP',\r\n    payload: {value}\r\n} as const)\r\n\r\n//THUNK CREATORS\r\nexport const signUp = (signUpData: SignUpData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const res = await authApi.signUp(signUpData)\r\n        console.log(res.data)\r\n        dispatch(setSignedUpSuccess(true))\r\n        dispatch(setAppInfo('Congratulations! Your registration is confirmed.'))\r\n    } catch (e: any) {\r\n        console.log(e as Error)\r\n        dispatch(setAppError(e.response ? e.response.data.error.toUpperCase() : e));\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n        dispatch(setSignedUpSuccess(false));\r\n    }\r\n}\r\n\r\n//TYPES\r\nexport type initialStateType = typeof initialState\r\n\r\nexport type SignUpSuccessActionType = ReturnType<typeof setSignedUpSuccess>\r\nexport type SignUpActionsType =\r\n    |SignUpSuccessActionType","D:\\cards-proj\\src\\redux\\store.ts",["278"],"import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {AuthActionsType, authReducer} from './auth-reducer';\r\nimport {AppActionsType, appReducer} from './app-reducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {ProfileActionsType, profileReducer} from './profile-reducer';\r\nimport {newPasswordReducer} from './newPassword-reducer';\r\nimport {restorePasswordReducer} from './restorePassword-reducer';\r\nimport {SignUpActionsType, signUpReducer} from './signUp-reducer';\r\nimport {TypedUseSelectorHook, useSelector} from 'react-redux';\r\nimport {DecksActionsType, decksReducer} from './decks-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    newPassword: newPasswordReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    signUp: signUpReducer,\r\n    decks:decksReducer\r\n})\r\n\r\nconst middlewareEnhancer = applyMiddleware(thunk)\r\nconst composeEnhancers = composeWithDevTools(middlewareEnhancer)\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers)\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type RootActionsType =\r\n    SignUpActionsType\r\n    | ProfileActionsType\r\n    | AppActionsType\r\n    | AuthActionsType\r\n    |DecksActionsType;\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, RootActionsType>;\r\n\r\n//export const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n\r\n// @ts-ignore\r\nwindow.store = store","D:\\cards-proj\\src\\reportWebVitals.ts",["279"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\cards-proj\\src\\setupTests.ts",[],{"ruleId":"280","severity":2,"message":"281","line":30,"column":47,"nodeType":"282","messageId":"283","endLine":30,"endColumn":63},{"ruleId":"280","severity":2,"message":"281","line":38,"column":33,"nodeType":"282","messageId":"283","endLine":38,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":41,"column":33,"nodeType":"282","messageId":"283","endLine":41,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":44,"column":33,"nodeType":"282","messageId":"283","endLine":44,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":47,"column":33,"nodeType":"282","messageId":"283","endLine":47,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":52,"column":33,"nodeType":"282","messageId":"283","endLine":52,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":55,"column":33,"nodeType":"282","messageId":"283","endLine":55,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":59,"column":33,"nodeType":"282","messageId":"283","endLine":59,"endColumn":57},{"ruleId":"280","severity":2,"message":"281","line":62,"column":33,"nodeType":"282","messageId":"283","endLine":62,"endColumn":57},{"ruleId":"280","severity":2,"message":"284","line":15,"column":70,"nodeType":"285","messageId":"283","endLine":15,"endColumn":79},{"ruleId":"286","severity":1,"message":"287","line":12,"column":20,"nodeType":"285","messageId":"288","endLine":12,"endColumn":33},{"ruleId":"280","severity":2,"message":"284","line":53,"column":51,"nodeType":"285","messageId":"283","endLine":53,"endColumn":64},{"ruleId":"286","severity":1,"message":"289","line":24,"column":12,"nodeType":"285","messageId":"288","endLine":24,"endColumn":16},{"ruleId":"280","severity":2,"message":"284","line":36,"column":87,"nodeType":"285","messageId":"283","endLine":36,"endColumn":96},{"ruleId":"286","severity":1,"message":"290","line":13,"column":9,"nodeType":"285","messageId":"288","endLine":13,"endColumn":13},{"ruleId":"291","severity":2,"message":"292","line":26,"column":25,"nodeType":"293","messageId":"294","endLine":26,"endColumn":39},{"ruleId":"291","severity":2,"message":"292","line":26,"column":25,"nodeType":"293","messageId":"294","endLine":26,"endColumn":35},{"ruleId":"291","severity":2,"message":"292","line":26,"column":22,"nodeType":"293","messageId":"294","endLine":26,"endColumn":33},{"ruleId":"291","severity":2,"message":"292","line":26,"column":22,"nodeType":"293","messageId":"294","endLine":26,"endColumn":29},{"ruleId":"286","severity":1,"message":"295","line":34,"column":9,"nodeType":"285","messageId":"288","endLine":34,"endColumn":22},{"ruleId":"286","severity":1,"message":"296","line":35,"column":9,"nodeType":"285","messageId":"288","endLine":35,"endColumn":22},{"ruleId":"286","severity":1,"message":"297","line":15,"column":15,"nodeType":"285","messageId":"288","endLine":15,"endColumn":20},{"ruleId":"298","severity":2,"message":"299","line":25,"column":48,"nodeType":"300","messageId":"301","endLine":25,"endColumn":49,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":42,"column":17,"nodeType":"305","messageId":"306","endLine":42,"endColumn":20,"suggestions":"307"},{"ruleId":"303","severity":1,"message":"304","line":33,"column":17,"nodeType":"305","messageId":"306","endLine":33,"endColumn":20,"suggestions":"308"},{"ruleId":"309","severity":2,"message":"310","line":36,"column":29,"nodeType":"311","messageId":"312","endLine":36,"endColumn":67},{"ruleId":"313","severity":2,"message":"314","line":36,"column":29,"nodeType":"315","messageId":"316","endLine":36,"endColumn":39},{"ruleId":"313","severity":2,"message":"314","line":36,"column":42,"nodeType":"315","messageId":"316","endLine":36,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":49,"column":17,"nodeType":"305","messageId":"306","endLine":49,"endColumn":20,"suggestions":"317"},{"ruleId":"309","severity":2,"message":"310","line":52,"column":29,"nodeType":"311","messageId":"312","endLine":52,"endColumn":67},{"ruleId":"313","severity":2,"message":"314","line":52,"column":29,"nodeType":"315","messageId":"316","endLine":52,"endColumn":39},{"ruleId":"313","severity":2,"message":"314","line":52,"column":42,"nodeType":"315","messageId":"316","endLine":52,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":88,"column":21,"nodeType":"305","messageId":"306","endLine":88,"endColumn":24,"suggestions":"318"},{"ruleId":"303","severity":1,"message":"304","line":103,"column":16,"nodeType":"305","messageId":"306","endLine":103,"endColumn":19,"suggestions":"319"},{"ruleId":"309","severity":2,"message":"310","line":106,"column":29,"nodeType":"311","messageId":"312","endLine":106,"endColumn":67},{"ruleId":"313","severity":2,"message":"314","line":106,"column":29,"nodeType":"315","messageId":"316","endLine":106,"endColumn":39},{"ruleId":"313","severity":2,"message":"314","line":106,"column":42,"nodeType":"315","messageId":"316","endLine":106,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":118,"column":16,"nodeType":"305","messageId":"306","endLine":118,"endColumn":19,"suggestions":"320"},{"ruleId":"309","severity":2,"message":"310","line":121,"column":29,"nodeType":"311","messageId":"312","endLine":121,"endColumn":67},{"ruleId":"313","severity":2,"message":"314","line":121,"column":29,"nodeType":"315","messageId":"316","endLine":121,"endColumn":39},{"ruleId":"313","severity":2,"message":"314","line":121,"column":42,"nodeType":"315","messageId":"316","endLine":121,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":133,"column":16,"nodeType":"305","messageId":"306","endLine":133,"endColumn":19,"suggestions":"321"},{"ruleId":"309","severity":2,"message":"310","line":136,"column":29,"nodeType":"311","messageId":"312","endLine":136,"endColumn":67},{"ruleId":"313","severity":2,"message":"314","line":136,"column":29,"nodeType":"315","messageId":"316","endLine":136,"endColumn":39},{"ruleId":"313","severity":2,"message":"314","line":136,"column":42,"nodeType":"315","messageId":"316","endLine":136,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":34,"column":17,"nodeType":"305","messageId":"306","endLine":34,"endColumn":20,"suggestions":"322"},{"ruleId":"309","severity":2,"message":"323","line":36,"column":30,"nodeType":"311","messageId":"312","endLine":36,"endColumn":82},{"ruleId":"313","severity":2,"message":"314","line":36,"column":30,"nodeType":"315","messageId":"316","endLine":36,"endColumn":40},{"ruleId":"313","severity":2,"message":"314","line":36,"column":43,"nodeType":"315","messageId":"316","endLine":36,"endColumn":53},{"ruleId":"324","severity":2,"message":"325","line":36,"column":43,"nodeType":"315","messageId":"326","endLine":36,"endColumn":76},{"ruleId":"327","severity":2,"message":"328","line":42,"column":1,"nodeType":"329","messageId":"330","endLine":42,"endColumn":14},{"ruleId":"331","severity":2,"message":"332","line":5,"column":5,"nodeType":"333","messageId":"334","endLine":11,"endColumn":8,"suggestions":"335"},"@typescript-eslint/restrict-template-expressions","Invalid type \"string | false\" of template literal expression.","LogicalExpression","invalidType","Invalid type \"string | undefined\" of template literal expression.","Identifier","@typescript-eslint/no-unused-vars","'spanClassName' is defined but never used.","unusedVar","'text' is assigned a value but never used.","'type' is defined but never used.","@typescript-eslint/restrict-plus-operands","Operands of '+' operation must either be both strings or both numbers. Consider using a template literal.","BinaryExpression","notStrings","'minCardsCount' is assigned a value but never used.","'maxCardsCount' is assigned a value but never used.","'error' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["336","337"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["338","339"],["340","341"],"@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `string`.","ConditionalExpression","unsafeArgument","@typescript-eslint/no-unsafe-member-access","Unsafe member access .response on an `any` value.","MemberExpression","unsafeMemberExpression",["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],"Unsafe argument of type `any` assigned to a parameter of type `boolean`.","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["354"],{"messageId":"355","fix":"356","desc":"357"},{"messageId":"358","fix":"359","desc":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"364","fix":"365","desc":"366"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"364","fix":"368","desc":"366"},{"messageId":"361","fix":"369","desc":"363"},{"messageId":"364","fix":"370","desc":"366"},{"messageId":"361","fix":"371","desc":"363"},{"messageId":"364","fix":"372","desc":"366"},{"messageId":"361","fix":"373","desc":"363"},{"messageId":"364","fix":"374","desc":"366"},{"messageId":"361","fix":"375","desc":"363"},{"messageId":"364","fix":"376","desc":"366"},{"messageId":"361","fix":"377","desc":"363"},{"messageId":"364","fix":"378","desc":"366"},{"messageId":"361","fix":"379","desc":"363"},{"messageId":"364","fix":"380","desc":"366"},{"messageId":"381","fix":"382","desc":"383"},"removeEscape",{"range":"384","text":"385"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"386","text":"387"},"Replace the `\\` with `\\\\` to include the actual backslash character.","suggestUnknown",{"range":"388","text":"389"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"388","text":"390"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"391","text":"389"},{"range":"391","text":"390"},{"range":"392","text":"389"},{"range":"392","text":"390"},{"range":"393","text":"389"},{"range":"393","text":"390"},{"range":"394","text":"389"},{"range":"394","text":"390"},{"range":"395","text":"389"},{"range":"395","text":"390"},{"range":"396","text":"389"},{"range":"396","text":"390"},{"range":"397","text":"389"},{"range":"397","text":"390"},"floatingFixVoid",{"range":"398","text":"399"},"Add void operator to ignore.",[1104,1105],"",[1104,1104],"\\",[1733,1736],"unknown","never",[1087,1090],[1606,1609],[3711,3714],[4224,4227],[4753,4756],[5283,5286],[1071,1074],[129,349],"void import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });"]